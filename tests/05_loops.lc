#include <std/assert>

outputs: list = []

for (i in [0..10]):
    outputs = outputs + [i.to_string()]
end
assert_eq!((outputs), ([ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" ]))

outputs = []
for (i in [0..10]):
    outputs = outputs + [(i % 2).to_string()]
    outputs = outputs + [f"hello number {i}"]
end

assert_eq!(outputs, ([
    "0", "hello number 0",
    "1", "hello number 1",
    "0", "hello number 2",
    "1", "hello number 3",
    "0", "hello number 4",
    "1", "hello number 5",
    "0", "hello number 6",
    "1", "hello number 7",
    "0", "hello number 8",
    "1", "hello number 9",
    "0", "hello number 10"
]))

while (len(outputs) > 20):
    outputs = outputs[0..20]
end

i: int = 0
while (i < 20):
    i += 1
end

running: bool = true
while (running):
    i += 1
    if (i >= 40):
        running = false
    end
end

assert_eq!(len(outputs), 20)


i: int = 100
j: int = 69

for (i in [0..3]):
    j += i
end

assert_eq!(i, 100)
assert_eq!(j, 75)

t: int = 0
while (true):
    t += 1
    if (t == 10):
        break
    end
end

assert_eq!(t, 10)

h: list = []
for (i in [0..10]):
    if (i == 5):
        continue
    end
    h = h.append(i)
end

assert_eq!(h, ([0, 1, 2, 3, 4, 6, 7, 8, 9, 10]))

output: str = ""

for (ch in "Hello, World!"):
    if (ch == ' '):
        continue
    end
    output = output + ch.to_string()
end

assert_eq!(output, ("Hello,World!"))
