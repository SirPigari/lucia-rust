#include <std/macros>

// variables
x: int = 7
y: int = 42
z: int = 137

assert_eq!((x.to_string().to_bytes()), (b"7"))

multiplied_str: str = x.to_string() * y
divided_int: float = multiplied_str.to_int() / 42
assert_eq!(divided_int, 18518518518518518518518518518518518518518.5)

z_int: int = z.to_float().to_int()
x_half: float = x / 2
pow_result: float = z_int ^ x_half  // pow operator
assert_eq!(pow_result, (30096915.22952864))

long_chained: int = (x + y * z - 1000 / 2 ^ 3) as int
assert_eq!(long_chained, 5636)
assert_eq!(long_chained.to_string(), "5636")
