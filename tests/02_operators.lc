#include <std/macros>

// arithmetic
assert_eq!(1 + 1, 2)
assert_eq!(1.5 + 2, 3.5)
assert_eq!("hello" + "world", "helloworld")

assert_eq!(2 - 1, 1)
assert_eq!(5.0 - 3, 2.0)
assert_eq!(3 - 1.5, 1.5)

assert_eq!(2 * 3, 6)
assert_eq!(2.5 * 4, 10.0)
assert_eq!("ha" * 3, "hahaha")

assert_eq!(6 / 2, 3)
assert_eq!(3.0 / 1.5, 2.0)
assert_eq!(6 / 2.5, 2.4)

assert_eq!(2 ^ 3, 8)
assert_eq!(4.0 ^ 2, 16.0)
assert_eq!(2 ^ 2.5, 5.656854249492381)

// comparison
assert!(1 == 1)
assert!(2 != 3)
assert!(3 > 2)
assert!(2 < 4)
assert!(4 >= 4)
assert!(5 <= 5)

// logical
assert!(true && true)
assert!(false || true)
assert!(!false)

// membership
assert!((1 in [1, 2, 3]))

// logic extensions
assert_eq!(true xor false, true)
assert_eq!(false xnor false, true)

// type checking
assert!(1 is int)
assert!(2 isnt str)

// aliases
assert_eq!(true and false, false)
assert_eq!(false or true, true)

// nein
assert_eq!(1 nein 2, true)

// abs
assert_eq!(|-1|, 1)
assert_eq!(|1 - 2|, 1)
assert_eq!(|2.5 - 3.7|, 1.2)
assert_eq!(|(5 - 10) * 2|, 10)

// factorial
assert_eq!(0!, 1)
assert_eq!(1!, 1)
assert_eq!(5!, 120)
assert_approx_eq!(6.9!, 4122.7094842854485)

// nested abs
assert_eq!(|-|-5| |, 5)
